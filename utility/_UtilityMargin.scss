@charset "utf-8";

@mixin u-margin() {
  .u-m {
    @if $marginDetail == t {
      @each $val in map-get($useMarginSize, l) {
        &l\:#{$val} {
          margin-left: unit($val, $marginUnit);
        }
      }
      @each $val in map-get($useMarginSize, r) {
        &r\:#{$val} {
          margin-right: unit($val, $marginUnit);
        }
      }
      @each $val in map-get($useMarginSize, t) {
        &t\:#{$val} {
          margin-top: unit($val, $marginUnit);
        }
      }
      @each $val in map-get($useMarginSize, b) {
        &b\:#{$val} {
          margin-bottom: unit($val, $marginUnit);
        }
      }
      @each $val in map-get($useMarginSize, x) {
        &x\:#{$val} {
          margin-left: unit($val, $marginUnit);
          margin-right: unit($val, $marginUnit);
        }
      }
      @each $val in map-get($useMarginSize, y) {
        &y\:#{$val} {
          margin-top: unit($val, $marginUnit);
          margin-bottom: unit($val, $marginUnit);
        }
      }
      @each $val in map-get($useMarginSize, all) {
        &\:#{$val}{
          margin: unit($val, $marginUnit);
        }
      }
            
      @each $size, $val in $useMarginSwitch {
        @if $val == true {
          @include mq-min($size) {
            @each $val in map-get($useMarginSize, l) {
              &l\@#{$size}\:#{$val} {
                margin-left: unit($val, $marginUnit);
              }
            }
            @each $val in map-get($useMarginSize, r) {
              &r\@#{$size}\:#{$val} {
                margin-right: unit($val, $marginUnit);
              }
            }
            @each $val in map-get($useMarginSize, t) {
              &t\@#{$size}\:#{$val} {
                margin-top: unit($val, $marginUnit);
              }
            }
            @each $val in map-get($useMarginSize, b) {
              &b\@#{$size}\:#{$val} {
                margin-bottom: unit($val, $marginUnit);
              }
            }
            @each $val in map-get($useMarginSize, x) {
              &x\@#{$size}\:#{$val} {
                margin-left: unit($val, $marginUnit);
                margin-right: unit($val, $marginUnit);
              }
            }
            @each $val in map-get($useMarginSize, y) {
              &y\@#{$size}\:#{$val} {
                margin-top: unit($val, $marginUnit);
                margin-bottom: unit($val, $marginUnit);
              }
            }
            @each $val in map-get($useMarginSize, all) {
              &\@#{$size}\:#{$val} {
                margin: unit($val, $marginUnit);
              }
            }
          }
        }
      }
    }
    @else {
      @each $val in $useMarginSize {
        &l\:#{$val} { margin-left: unit($val, $marginUnit); }
        &r\:#{$val} { margin-right: unit($val, $marginUnit); }
        &t\:#{$val} { margin-top: unit($val, $marginUnit); }
        &b\:#{$val} { margin-bottom: unit($val, $marginUnit); }
        &x\:#{$val} {
          margin-left: unit($val, $marginUnit);
          margin-right: unit($val, $marginUnit);
        }
        &y\:#{$val} {
          margin-top: unit($val, $marginUnit);
          margin-bottom: unit($val, $marginUnit);
        }
        &\:#{$val} { margin: unit($val, $marginUnit); }
      }

      @each $size, $val in $useMarginSwitch {
        @if $val == true {
          @include mq-min($size){
            @each $val in $useMarginSize {
              &l\@#{$size}\:#{$val} { margin-left: unit($val, $marginUnit); }
              &r\@#{$size}\:#{$val} { margin-right: unit($val, $marginUnit); }
              &t\@#{$size}\:#{$val} { margin-top: unit($val, $marginUnit); }
              &b\@#{$size}\:#{$val} { margin-bottom: unit($val, $marginUnit); }
              &x\@#{$size}\:#{$val} {
                margin-left: unit($val, $marginUnit);
                margin-right: unit($val, $marginUnit);
              }
              &y\@#{$size}\:#{$val} {
                margin-top: unit($val, $marginUnit);
                margin-bottom: unit($val, $marginUnit);
              }
              &\@#{$size}\:#{$val} { margin: unit($val, $marginUnit); }
            }
          }
        }
      }
    }
  }
}
